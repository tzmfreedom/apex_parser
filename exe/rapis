#!/usr/bin/env ruby

require 'apex_parser/apex_compiler'
require 'apex_parser/visitor/interpreter'
require 'json'
require 'optparse'

require 'apex_parser/visitor/interpreter/apex_class_creator'
Dir[File.expand_path('../lib/apex_parser/runtime/*.rb', __dir__)].each do |f|
  require f
end

Bundler.require

parser = ApexParser::ApexCompiler.new
parser.instance_eval { @yydebug = true }

show_ast = false
opt_parser = OptionParser.new
opt_parser.on('-s') {|v| show_ast = true }
args = opt_parser.parse(ARGV)

interpreter = ApexParser::Visitor::Interpreter.new
file = File.expand_path(args[0])

raise "#{file} not exist" unless File.exists?(file)

if File.directory?(file)
  Dir["#{file}/**/*.cls"].each do |filepath|
    root_stmts = parser.scan_str(File.read(filepath))
    root_stmts.each { |stmt| stmt.accept(interpreter) }
    pp root_stmts if show_ast
  end
else
  root_stmts = parser.scan_str(File.read(file))
  root_stmts.each { |stmt| stmt.accept(interpreter) }
  pp root_stmts if show_ast
end

return if show_ast

call_method_node = ApexParser::AST::MethodInvocationNode.new(
  receiver: ApexParser::AST::NameNode.new(value: [:Hoge]),
  arguments: [],
  apex_method_name: :action
)
call_method_node.accept(interpreter)
